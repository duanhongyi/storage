{{- if eq .Values.global.storageLocation "on-cluster" }}
{{- $replicaCount := int .Values.mainnode.replicas }}
{{- $clusterDomain := .Values.global.clusterDomain }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: drycc-storage-mainnode
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.imageTag }}
spec:
  serviceName: drycc-storage-mainnode
  replicas: {{ $replicaCount }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app: drycc-storage-mainnode
  template:
    metadata:
      labels:
        app: drycc-storage-mainnode
    spec:
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset.type "key" .Values.podAffinityPreset.key "values" .Values.podAffinityPreset.values ) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.mainnode.podAntiAffinityPreset.type "key" .Values.mainnode.podAntiAffinityPreset.key "values" .Values.mainnode.podAntiAffinityPreset.values ) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values ) | nindent 10 }}
      serviceAccount: drycc-storage
      containers:
        - name: drycc-storage-mainnode-weed
          image: {{ .Values.imageRegistry }}/{{ .Values.imageOrg }}/storage:{{ .Values.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - mainnode
            - weed
            - -mdir=/data
            - -ip=$(POD_NAME).drycc-storage-mainnode.$(NAMESPACE).svc.{{ $clusterDomain }}
            - -port=9333
            - -peers={{ include "mainnode.WeedUrls" . }}
            - -metricsPort=9324
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: "DRYCC_STORAGE_CA"
              value: /etc/drycc/storage/pki/ca.crt
            - name: "DRYCC_STORAGE_CERT"
              value: /etc/drycc/storage/pki/tls.crt
            - name: "DRYCC_STORAGE_KEY"
              value: /etc/drycc/storage/pki/tls.key
            - name: "DRYCC_STORAGE_JWT"
              valueFrom:
                secretKeyRef:
                  name: drycc-storage-creds
                  key: jwtkey
          ports:
            - containerPort: 9333
            - containerPort: 19333
            - containerPort: 9324
          livenessProbe:
            tcpSocket:
              port: 9333
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: 9333
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
          {{- if .Values.mainnode.persistence.enabled }}
          - name: storage-mainnode
            mountPath: /data
            subPath: weed
          {{- end }}
          - name: certs
            mountPath: /etc/drycc/storage/pki/
            readOnly: true
        - name: drycc-storage-mainnode-pd
          image: {{ .Values.imageRegistry }}/{{ .Values.imageOrg }}/storage:{{ .Values.imageTag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - mainnode
            - pd
            - --name=$(POD_NAME)
            - --data-dir=/data
            - --client-urls=https://0.0.0.0:2379
            - --peer-urls=https://0.0.0.0:2380
            - --advertise-client-urls=https://$(POD_NAME).drycc-storage-mainnode.$(NAMESPACE).svc.{{ $clusterDomain }}:2379
            - --advertise-peer-urls=https://$(POD_NAME).drycc-storage-mainnode.$(NAMESPACE).svc.{{ $clusterDomain }}:2380
            - --join={{ include "mainnode.PdUrls" . }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: "DRYCC_STORAGE_CA"
              value: /etc/drycc/storage/pki/ca.crt
            - name: "DRYCC_STORAGE_CERT"
              value: /etc/drycc/storage/pki/tls.crt
            - name: "DRYCC_STORAGE_KEY"
              value: /etc/drycc/storage/pki/tls.key
            - name: "DRYCC_STORAGE_JWT"
              valueFrom:
                secretKeyRef:
                  name: drycc-storage-creds
                  key: jwtkey
          ports:
            - containerPort: 2379
            - containerPort: 2380
          livenessProbe:
            tcpSocket:
              port: 2380
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: 2379
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
          {{- if .Values.mainnode.persistence.enabled }}
          - name: storage-mainnode
            mountPath: /data
            subPath: pd
          {{- end }}
          - name: certs
            mountPath: /etc/drycc/storage/pki/
            readOnly: true
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      volumes:
      - name: certs
        secret:
          secretName: drycc-storage-creds
  {{- if .Values.mainnode.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: storage-mainnode
    spec:
      accessModes: [ "ReadWriteOnce" ]
      {{- if .Values.mainnode.persistence.storageClass }}
      {{- if (eq "-" .Values.mainnode.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.mainnode.persistence.storageClass }}"
      {{- end }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.mainnode.persistence.size | quote }}
  {{- end }}
{{- end }}
