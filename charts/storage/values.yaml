imageOrg: "drycc"
imagePullPolicy: "Always"
imageTag: "canary"
imageRegistry: "registry.drycc.cc"

# The following parameters are configured only when using an on-cluster storage instance
nodeAffinityPreset:
  key: "drycc.cc/node"
  type: "soft"
  values:
  - "true"

podAffinityPreset:
  key: "security"
  type: ""
  values:
  - "drycc-security"

# drycc storage csi
csi:
  daemonset:
    registrarImage: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.5.0
  statefulset:
    replicas: 1
    resizerImage: k8s.gcr.io/sig-storage/csi-resizer:v1.4.0
    attacherImage: k8s.gcr.io/sig-storage/csi-attacher:v3.4.0
    provisionerImage: k8s.gcr.io/sig-storage/csi-provisioner:v3.1.0
  

# mainnode seaweedFS master & pd
mainnode:
  replicas: 3
  podAntiAffinityPreset:
    key: "app"
    type: "soft"
    values:
    - "drycc-storage-mainnode"
  # persistence config
  persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 5Gi
    storageClass: ""
    volumeName: ""

# metanode: seaweedFS filer & tikv
metanode:
  replicas: 3
  podAntiAffinityPreset:
    key: "app"
    type: "soft"
    values:
    - "drycc-storage-metanode"
# persistence config
  persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 5Gi
    storageClass: ""
    volumeName: ""

# datanode: seaweedFS volume
datanode:
  replicas: 3
  podAntiAffinityPreset:
    key: "app"
    type: "soft"
    values:
    - "drycc-storage-datanode"
  # persistence config
  persistence:
    enabled: false
    accessMode: ReadWriteOnce
    size: 5Gi
    storageClass: ""
    volumeName: ""

# Service
service:
  # Provide any additional service annotations
  annotations: {}

global:
  # Admin email, used for each component to send email to administrator
  email: "drycc@drycc.cc"
  # Please check `kubernetes.io/ingress.class`
  # The cert-manager component must be installed
  # If you want to use HTTPSEnforced or allowlist functions, you must specify:
  # - nginx
  # - traefik
  # Only the above options have been supported so far
  ingressClass: ""
  # A domain name consists of one or more parts.
  # Periods (.) are used to separate these parts.
  # Each part must be 1 to 63 characters in length and can contain lowercase letters, digits, and hyphens (-).
  # It must start and end with a lowercase letter or digit.
  clusterDomain: "cluster.local"
  # The publicly resolvable hostname to build your cluster with.
  #
  # This will be the hostname that is used to build endpoints such as "drycc.$HOSTNAME"
  platformDomain: ""

  storageLocation: on-cluster
